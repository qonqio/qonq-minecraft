name: AT-AT-Release-dev

on:
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:

  terraform-plan:
    runs-on: ubuntu-latest

    environment:
      name: 'dev'

    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
        tenant-id: ${{ vars.ARM_TENANT_ID }}
        subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - id: setup
      name: Setup `terraform`
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}

    - id: validate
      name: Terraform Validate
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
        ARM_USE_OIDC: true
        TF_VAR_application_name: ${{ vars.APPLICATION_NAME }}
        TF_VAR_environment_name: ${{ vars.ENVIRONMENT_NAME }}
        TF_VAR_azure_gallery_name: ${{ vars.PACKER_COMPUTE_GALLERY_NAME }}
        TF_VAR_azure_gallery_resource_group: ${{ vars.PACKER_COMPUTE_GALLERY_RESOURCE_GROUP }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        export ARM_OID_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN
        
        terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_STATE_CONTAINER_NAME }}" \
          -backend-config="key=${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT_NAME }}"
          
        terraform validate

    - id: plan
      name: Terraform Plan
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
        ARM_USE_OIDC: true
        TF_VAR_application_name: ${{ vars.APPLICATION_NAME }}
        TF_VAR_environment_name: ${{ vars.ENVIRONMENT_NAME }}
        TF_VAR_azure_gallery_name: ${{ vars.PACKER_COMPUTE_GALLERY_NAME }}
        TF_VAR_azure_gallery_resource_group: ${{ vars.PACKER_COMPUTE_GALLERY_RESOURCE_GROUP }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        export ARM_OID_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN
        
        terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_STATE_CONTAINER_NAME }}" \
          -backend-config="key=${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT_NAME }}"
          
        terraform plan -out=terraform-plan-${{ github.run_id }}.tfplan

    - name: Upload Plan to Azure Storage
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        az storage blob upload \
          --account-name ${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }} \
          --container-name ${{ vars.BACKEND_STORAGE_PLAN_CONTAINER_NAME }} \
          --name terraform-plan-${{ github.run_id }}.tfplan \
          --file terraform-plan-${{ github.run_id }}.tfplan

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest

    environment:
      name: 'dev'

    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
        tenant-id: ${{ vars.ARM_TENANT_ID }}
        subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

    - id: setup
      name: Setup `terraform`
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}

    - name: Download Plan from Azure Storage
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        az storage blob download \
          --account-name ${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }} \
          --container-name ${{ vars.BACKEND_STORAGE_PLAN_CONTAINER_NAME }} \
          --name terraform-plan-${{ github.run_id }}.tfplan \
          --file terraform-plan-${{ github.run_id }}.tfplan

    - id: apply
      name: Terraform Apply
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
        ARM_USE_OIDC: true
        TF_VAR_application_name: ${{ vars.APPLICATION_NAME }}
        TF_VAR_environment_name: ${{ vars.ENVIRONMENT_NAME }}
        TF_VAR_azure_gallery_name: ${{ vars.PACKER_COMPUTE_GALLERY_NAME }}
        TF_VAR_azure_gallery_resource_group: ${{ vars.PACKER_COMPUTE_GALLERY_RESOURCE_GROUP }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        export ARM_OID_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN
        
        terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_STATE_CONTAINER_NAME }}" \
          -backend-config="key=${{ vars.APPLICATION_NAME }}-${{ vars.ENVIRONMENT_NAME }}"

        terraform apply terraform-plan-${{ github.run_id }}.tfplan